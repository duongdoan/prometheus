# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
#  - job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
#    static_configs:
#    - targets: ['127.0.0.1:9090']

  
  - job_name: 'mbh-beta-docker'
    scrape_interval: 15s
    static_configs:
    - targets: ['ip-172-31-13-15.ap-southeast-1.compute.internal:15001','ip-172-31-13-15.ap-southeast-1.compute.internal:15002','ip-172-31-14-199.ap-southeast-1.compute.internal:15001','ip-172-31-14-199.ap-southeast-1.compute.internal:15002']
    
  - job_name: 'mbh-beta-microservice'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 15s
    consul_sd_configs:
    - server: 'ip-172-31-13-15.ap-southeast-1.compute.internal:9002'
    
    relabel_configs:
    - source_labels: ['__meta_consul_address']
      separator: ';'
      target_label:  '__address__'
      replacement: '${1}:15000'
      action: 'replace'
    - source_labels: ['__meta_consul_service','__meta_consul_service_address']
      separator: '_'
      target_label:  'instance'
      replacement: '${1}${2}'
      action: 'replace'
    
  - job_name: 'mbh-beta-microservice-image'
    metrics_path: '/minio/prometheus/metrics'
    scrape_interval: 15s
    static_configs:
    - targets: ['minio_minio_1:9000']
